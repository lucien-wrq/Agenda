<?php

// Récupérer les données du formulaire HTML
$lastname = $_POST['lastname'];
$firstname =$_POST['firstname'];
$email = $_POST['email'];
$password = $_POST['password'];
$id_user = uniqid();

$id_role = $_POST['role'];

date_default_timezone_set('Europe/Paris');
$creation_date = date('Y-m-d H:i:s');

// Fonction de validation d'une adresse e-mail
function validateEmail($email) {
    // Utilisation de filter_var avec FILTER_VALIDATE_EMAIL
    return filter_var($email, FILTER_VALIDATE_EMAIL);
}

if (validateEmail($_POST['email'])) {
    $email = $_POST['email'];
} else {
    echo "L'adresse e-mail n'est pas valide.";
    exit();
}

// Ouvrir la connexion à la base de données SQLite
try {
    $db = new PDO('sqlite:BDD2.db');
} catch (PDOException $e) {
    die("Erreur de connexion : " . $e->getMessage());
}

// Préparer la requête SQL
$sql = "INSERT INTO users (id_user, lastname, firstname, email, password, creation_date) VALUES (:id_user, :lastname, :firstname, :email, :password, :creation_date)";
$sql2 = "INSERT INTO users_has_roles (id_user, id_role) VALUES (:id_user, :id_role)";

// Préparer la requête SQL avec PDO
$stmt = $db->prepare($sql);
$stmt2 = $db->prepare($sql2);

// Binder les paramètres
$stmt->bindParam(':id_user', $id_user, PDO::PARAM_STR);
$stmt->bindParam(':lastname', $lastname, PDO::PARAM_STR);
$stmt->bindParam(':firstname', $firstname, PDO::PARAM_STR);
$stmt->bindParam(':email', $email, PDO::PARAM_STR);
$stmt->bindParam(':password', $password, PDO::PARAM_STR);
$stmt->bindParam(':creation_date', $creation_date, PDO::PARAM_STR);

$stmt2->bindParam(':id_user', $id_user, PDO::PARAM_STR);
$stmt2->bindParam(':id_role', $id_role, PDO::PARAM_STR);

// Exécuter la requête
if ($stmt->execute()) {
    echo "Enregistrement réussi";

} else {
    echo "Erreur : " . print_r($stmt->errorInfo(), true);

}

if ($stmt2->execute()) {
    echo "Enregistrement réussi";

} else {
    echo "Erreur : " . print_r($stmt->errorInfo(), true);

}

// Fermer la connexion
$db = null;

?>
