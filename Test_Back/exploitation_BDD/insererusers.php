<?php

// Récupérer les données du formulaire HTML
$lastname = isset($_POST['lastname']) ? $_POST['lastname'] : '';
$firstname = isset($_POST['firstname']) ? $_POST['firstname'] : '';
$email = isset($_POST['email']) ? $_POST['email'] : '';
$password = isset($_POST['password']) ? $_POST['password'] : '';
$id_user = uniqid();


// Fonction de validation d'une adresse e-mail
function validateEmail($email) {
    // Utilisation de filter_var avec FILTER_VALIDATE_EMAIL
    return filter_var($email, FILTER_VALIDATE_EMAIL);
}

if (validateEmail($_POST['email'])) {
    $email = $_POST['email'];
} else {
    echo "L'adresse e-mail n'est pas valide.";
    exit();
}

// Ouvrir la connexion à la base de données SQLite
try {
    $db = new PDO('sqlite:BDD2.db');
} catch (PDOException $e) {
    die("Erreur de connexion : " . $e->getMessage());
}

// Préparer la requête SQL
$sql = "INSERT INTO users (id_user, lastname, firstname, email, password) VALUES (:id_user, :lastname, :firstname, :email, :password)";

// Préparer la requête SQL avec PDO
$stmt = $db->prepare($sql);

// Binder les paramètres
$stmt->bindParam(':id_user', $id_user, PDO::PARAM_STR);
$stmt->bindParam(':lastname', $lastname, PDO::PARAM_STR);
$stmt->bindParam(':firstname', $firstname, PDO::PARAM_STR);
$stmt->bindParam(':email', $email, PDO::PARAM_STR);
$stmt->bindParam(':password', $password, PDO::PARAM_STR);

// Exécuter la requête
if ($stmt->execute()) {
    echo "Enregistrement réussi";

} else {
    echo "Erreur : " . print_r($stmt->errorInfo(), true);

}

// Fermer la connexion
$db = null;

?>
